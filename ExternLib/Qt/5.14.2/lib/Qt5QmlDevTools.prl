
QMAKE_PRO_INPUT = qmldevtools.pro
QMAKE_PRL_TARGET = Qt5QmlDevTools.lib
QMAKE_PRL_CONFIG = lex yacc depend_includepath testcase_targets import_qpa_plugin windows prepare_docs qt_docs_targets qt_build_extra file_copies qmake_use qt warn_on release link_prl flat debug_and_release precompile_header autogen_precompile_source embed_manifest_dll embed_manifest_exe cross_compile release no_plugin_manifest win32 msvc copy_dir_files cross_compile sse2 aesni sse3 ssse3 sse4_1 sse4_2 avx avx2 avx512f avx512bw avx512cd avx512dq avx512er avx512ifma avx512pf avx512vbmi avx512vl compile_examples f16c force_debug_info precompile_header rdrnd shani x86SimdAlways prefix_build force_independent force_bootstrap utf8_source create_prl link_prl no_private_qt_headers_warning QTDIR_build qt_example_installs exceptions_off testcase_exceptions warning_clean python_available release ReleaseBuild Release build_pass c++11 release ReleaseBuild Release build_pass minimal_syncqt internal_module generated_privates qlalr static relative_qt_rpath git_build target_qt c++11 strict_c++ c++14 c++1z need_fwd_pri qt_install_module create_cmake skip_target_version_ext release ReleaseBuild Release build_pass have_target staticlib exclusive_builds debug_info no_autoqmake thread gc_binaries
QMAKE_PRL_VERSION = 5.14.2
QMAKE_PRL_LIBS = $$[QT_HOST_LIBS]/Qt5Bootstrap.lib user32.lib ole32.lib advapi32.lib shell32.lib netapi32.lib
QMAKE_PRL_LIBS_FOR_CMAKE = $$[QT_HOST_LIBS]/Qt5Bootstrap.lib;user32.lib;ole32.lib;advapi32.lib;shell32.lib;netapi32.lib;;;
