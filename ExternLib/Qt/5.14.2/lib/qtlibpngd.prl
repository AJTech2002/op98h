
QMAKE_PRO_INPUT = libpng.pro
QMAKE_PRL_TARGET = qtlibpngd.lib
QMAKE_PRL_CONFIG = lex yacc debug depend_includepath testcase_targets import_qpa_plugin windows prepare_docs qt_docs_targets qt_build_extra package_manifest file_copies qmake_use link_prl incremental flat precompile_header autogen_precompile_source debug_and_release cross_compile no_plugin_manifest winrt win32 msvc copy_dir_files cross_compile sse2 aesni sse3 ssse3 sse4_1 sse4_2 avx avx2 avx512f avx512bw avx512cd avx512dq avx512er avx512ifma avx512pf avx512vbmi avx512vl compile_examples f16c force_debug_info precompile_header rdrnd shani x86SimdAlways prefix_build force_independent force_bootstrap builtin_testdata utf8_source create_prl link_prl no_private_qt_headers_warning QTDIR_build qt_example_installs exceptions_off testcase_exceptions debug DebugBuild Debug build_pass c++11 msvc_cross static hide_symbols exceptions_off rtti_off warn_off installed git_build c++11 strict_c++ c++14 c++1z debug_and_release build_all qt debug DebugBuild Debug build_pass have_target staticlib no_plist exclusive_builds debug_info no_autoqmake thread moc resources
QMAKE_PRL_LIBS = $$[QT_INSTALL_LIBS]/Qt5Cored.lib ucrtd.lib vcruntimed.lib windowscodecs.lib WindowsApp.lib runtimeobject.lib OneCore.lib
QMAKE_PRL_LIBS_FOR_CMAKE = ;$$[QT_INSTALL_LIBS]/Qt5Cored.lib;ucrtd.lib;vcruntimed.lib;windowscodecs.lib;WindowsApp.lib;runtimeobject.lib;OneCore.lib;
